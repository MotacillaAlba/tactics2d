name: Test Modules
on:
  - pull_request
  - workflow_dispatch

jobs:
  test-modules:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v4
        with:
            submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
          pip install bezier
      - name: Pytest
        run: |
          mkdir ./tests/runtime
          pytest tests --cov=tactics2d --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
  
  test-modules-on-Ubuntu1804:
    runs-on: ubuntu-latest
    container: 
        image: ubuntu:18.04
        options: --user root
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - name: Display the shell
        run: echo $SHELL
      - name: Display Ubuntu version
        run: cat /etc/lsb-release
      - name: Install system-wise dependencies
        run: |
          apt-get update
          apt-get install -y software-properties-common
          add-apt-repository ppa:git-core/ppa -y
          apt-get update
          apt-get upgrade
          apt-get install -y git
      - uses: actions/checkout@v3
        with:
            submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        run: |
          apt-get install -y wget 
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
          chmod +x ./Miniconda3-latest-Linux-x86_64.sh
          ./Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda
          export PATH="$HOME/miniconda/bin:$PATH"
          conda init bash
          exec $SHELL
          conda create -n testenv python=${{ matrix.python-version }} -y
          ls /usr/bin/python*
          conda activate testenv
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
          pip install bezier
      - name: Pytest
        run: |
          mkdir ./tests/runtime
          pytest tests